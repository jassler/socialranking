# Generated by roxygen2: do not edit by hand

S3method("==","LP*Scores")
S3method("==",CopelandScores)
S3method("==",CumulativeScores)
S3method("==",DualLexcelScores)
S3method("==",L1Scores)
S3method("==",L2Scores)
S3method("==",LPScores)
S3method("==",LexcelScores)
S3method("==",OrdinalBanzhafScores)
S3method("==",PowerRelation)
S3method("==",SocialRanking)
S3method(">","LP*Scores")
S3method(">",CopelandScores)
S3method(">",CumulativeScores)
S3method(">",DualLexcelScores)
S3method(">",L1Scores)
S3method(">",L2Scores)
S3method(">",LPScores)
S3method(">",LexcelScores)
S3method(">",OrdinalBanzhafScores)
S3method("[","LP*Scores")
S3method("[",CopelandScores)
S3method("[",CumulativeScores)
S3method("[",DualLexcelScores)
S3method("[",L1Scores)
S3method("[",L2Scores)
S3method("[",LPScores)
S3method("[",LexcelScores)
S3method("[",OrdinalBanzhafScores)
S3method(as.PowerRelation,character)
S3method(as.PowerRelation,list)
S3method(as.relation,PowerRelation)
S3method(is.na,"LP*Scores")
S3method(is.na,CopelandScores)
S3method(is.na,CumulativeScores)
S3method(is.na,DualLexcelScores)
S3method(is.na,L1Scores)
S3method(is.na,L2Scores)
S3method(is.na,LPScores)
S3method(is.na,LexcelScores)
S3method(is.na,OrdinalBanzhafScores)
S3method(print,PowerRelation)
S3method(print,SocialRanking)
S3method(print,cpMajority)
export("%:%")
export("%>=L1%")
export("%>=L2%")
export("%>=LP%")
export("%>=LPS%")
export("%>=banz%")
export("%>=cop%")
export("%>=cp%")
export("%>=cumuldom%")
export("%>=dom%")
export("%>=duallex%")
export("%>=ks%")
export("%>=lex%")
export("%>L1%")
export("%>L2%")
export("%>LP%")
export("%>LPS%")
export("%>banz%")
export("%>cop%")
export("%>cp%")
export("%>cumuldom%")
export("%>dom%")
export("%>duallex%")
export("%>ks%")
export("%>lex%")
export(L1Ranking)
export(L1Scores)
export(L2Ranking)
export(L2Scores)
export(LPRanking)
export(LPSRanking)
export(LPSScores)
export(LPScores)
export(PowerRelation)
export(SocialRanking)
export(appendMissingCoalitions)
export(as.PowerRelation)
export(coalitionLookup)
export(coalitionsAreIndifferent)
export(copelandRanking)
export(copelandScores)
export(cpMajorityComparison)
export(cpMajorityComparisonScore)
export(createPowerset)
export(cumulativeScores)
export(cumulativelyDominates)
export(doRanking)
export(dominates)
export(dualLexcelRanking)
export(elementLookup)
export(equivalenceClassIndex)
export(generateNextPartition)
export(generateRandomPowerRelation)
export(is.PowerRelation)
export(kramerSimpsonRanking)
export(kramerSimpsonScores)
export(lexcel1Ranking)
export(lexcel1Scores)
export(lexcel2Ranking)
export(lexcel2Scores)
export(lexcelPRanking)
export(lexcelPSRanking)
export(lexcelPSScores)
export(lexcelPScores)
export(lexcelRanking)
export(lexcelScores)
export(makePowerRelationMonotonic)
export(newPowerRelation)
export(newPowerRelationFromString)
export(ordinalBanzhafRanking)
export(ordinalBanzhafScores)
export(powerRelationGenerator)
export(powerRelationMatrix)
export(testRelation)
export(transitiveClosure)
importFrom(Rdpack,reprompt)
importFrom(relations,as.relation)
