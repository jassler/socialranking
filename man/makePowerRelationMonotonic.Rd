% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makePowerRelationMonotonic.R
\name{makePowerRelationMonotonic}
\alias{makePowerRelationMonotonic}
\title{Make Power Relation monotonic}
\usage{
makePowerRelationMonotonic(powerRelation)
}
\arguments{
\item{powerRelation}{A \code{\link{PowerRelation}} object created by \code{\link[=PowerRelation]{PowerRelation()}} or \code{\link[=as.PowerRelation]{as.PowerRelation()}}}
}
\value{
\code{\link{PowerRelation}} object containing the following values:
\itemize{
\item \verb{$elements}: vector of elements
\item \verb{$eqs}: equivalence classes. Nested list of lists, each containing vectors representing groups of elements in the same equivalence class
\item \verb{$coalitionLookup}: \verb{function(v)} taking a coalition vector \code{v} as input and returning the equivalence class it belongs to (or a vector of equivalence classes if the coalition appears multiple times).
\item \verb{$elementLookup}: \verb{function(e)} taking an element \code{e} as input and returning a list of 2-sized tuples, each representing which equivalence class and which index inside that equivalence class that element appears in.
}

If \verb{$elements}, \verb{$coalitionLookup} and \verb{$elementLookup} are known beforehand, they can be passed to the function to bypass its own possibly resource-intensive initialization process.
Since these values are so tightly coupled to the \verb{$eqs} list, however, this is only ever encouraged if the time gains are undoubtedly justified.
}
\description{
Given a \code{powerRelation} object, make its order monotonic.
}
\details{
A power relation is monotonic if, for a coalition \eqn{S \subseteq N}{S subset of N},

\deqn{T \subset S \Leftrightarrow S \succeq T.}{T subset of S <=> S >= T.}

This also moves any super sets that are ranked below a subset into the same
equivalence class of the subset.
}
\examples{
pr <- as.PowerRelation('ab > ac > abc > b > a > {} > c < bc')
makePowerRelationMonotonic(pr)
# (abc ~ ab) > ac > (bc ~ b) > a > (c ~ {})

# notice that missing coalitions are automatically added
# (except for the empty set)
pr <- as.PowerRelation('a > b > c')
makePowerRelationMonotonic(pr)
# (abc ~ ab ~ ac ~ a) > (bc ~ b) > c

pr <- as.PowerRelation('a > {} > b > c')
makePowerRelationMonotonic(pr)
# (abc ~ ab ~ ac ~ a) > (bc ~ b ~ c ~ {})

}
\seealso{
Other helper functions transorming existing \code{\link{PowerRelation}} objects: 
\code{\link{makePowerRelationTotal}()}
}
\concept{helper functions transorming existing \code{\link{PowerRelation}} objects}
