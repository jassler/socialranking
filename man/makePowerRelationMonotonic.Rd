% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerRelation.R
\name{makePowerRelationMonotonic}
\alias{makePowerRelationMonotonic}
\title{Make Power Relation monotonic}
\usage{
makePowerRelationMonotonic(powerRelation)
}
\arguments{
\item{powerRelation}{A \code{PowerRelation} object created by \code{\link[=newPowerRelation]{newPowerRelation()}}}
}
\value{
\code{PowerRelation} object containing vector of elements or players \verb{$elements}, an ordered list of
coalitions \verb{$rankingCoalitions} and an ordered vector of comparators \verb{$rankingComparators}
as well as an ordered list of equivalence classes \verb{$equivalenceClasses} for convenience
}
\description{
Given a \code{powerRelation} object, make its order monotonic.
}
\details{
A power relation is monotonic if, for a coalition \eqn{S \subseteq N}{S subset of N},

\deqn{T \subset S \Leftrightarrow S \succeq T.}{T subset of S <=> S >= T.}

This also moves any super sets that are ranked below a subset into the same
equivalence class of the subset.
}
\examples{
pr <- newPowerRelationFromString('ab > ac > abc > b > a > {} > c < bc')
makePowerRelationMonotonic(pr)
# (abc ~ ab) > ac > (bc ~ b) > a > (c ~ {})

# notice that missing coalitions are automatically added
# (except for the empty set)
pr <- newPowerRelationFromString('a > b > c')
makePowerRelationMonotonic(pr)
# (abc ~ ab ~ ac ~ a) > (bc ~ b) > c

pr <- newPowerRelationFromString('a > {} > b > c')
makePowerRelationMonotonic(pr)
# (abc ~ ab ~ ac ~ a) > (bc ~ b ~ c ~ {})

}
\seealso{
Other helper functions transorming existing \code{PowerRelation} objects: 
\code{\link{makePowerRelationTotal}()}
}
\concept{helper functions transorming existing \code{PowerRelation} objects}
