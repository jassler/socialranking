% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerRelation.R
\name{makePowerRelationTotal}
\alias{makePowerRelationTotal}
\title{Make Power Relation total}
\usage{
makePowerRelationTotal(powerRelation, includeEmptySet = TRUE)
}
\arguments{
\item{powerRelation}{A \code{PowerRelation} object created by \code{\link[=newPowerRelation]{newPowerRelation()}}}

\item{includeEmptySet}{If \code{TRUE}, check \mjeqn{\lbrace i \rbrace \succeq \lbrace j \rbrace}{\{i\} >= \{j\}} even if
empty set is not part of the power relation.}
}
\value{
\code{PowerRelation} object containing vector of elements or players \verb{$elements}, an ordered list of
coalitions \verb{$rankingCoalitions} and an ordered vector of comparators \verb{$rankingComparators}
as well as an ordered list of equivalence classes \verb{$equivalenceClasses} for convenience
}
\description{
Append an equivalence to a power relation with all its missing coalitions to make it total.
}
\details{
A power relation is total if for every \eqn{S, T \subseteq N}{S, T subset or equal to N},

\deqn{S \succeq T\text{ or }T \succeq S.}{S>=T or T>=S.}

In other words, we can compare every coalition against every other coalition there is.
The function simply adds the coalitions missing from the \code{\link{PowerRelation}} object to make it total behind the last equivalence class there is.
}
\examples{
pr <- newPowerRelation(c(1,2), '>', 3)
# 12 > 3

makePowerRelationTotal(pr)
# 12 > 3 > (123 ~ 13 ~ 23 ~ 1 ~ 2 ~ {})

makePowerRelationTotal(pr, includeEmptySet = FALSE)
# 12 > 3 > (123 ~ 13 ~ 23 ~ 1 ~ 2)

}
\seealso{
Other helper functions transorming existing \code{PowerRelation} objects: 
\code{\link{makePowerRelationMonotonic}()}
}
\concept{helper functions transorming existing \code{PowerRelation} objects}
