% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makePowerRelationTotal.R
\name{makePowerRelationTotal}
\alias{makePowerRelationTotal}
\title{Make Power Relation total}
\usage{
makePowerRelationTotal(powerRelation, includeEmptySet = TRUE)
}
\arguments{
\item{powerRelation}{A \code{\link{PowerRelation}} object created by \code{\link[=newPowerRelation]{newPowerRelation()}}}

\item{includeEmptySet}{If \code{TRUE}, include the empty set in the last equivalence class if it is missing from the power relation.}
}
\value{
\code{\link{PowerRelation}} object containing the following values:
\itemize{
\item \verb{$elements}: vector of elements
\item \verb{$eqs}: equivalence classes. Nested list of lists, each containing vectors representing groups of elements in the same equivalence class
\item \verb{$coalitionLookup}: \verb{function(v)} taking a coalition vector \code{v} as input and returning the equivalence class it belongs to (or a vector of equivalence classes if the coalition appears multiple times).
\item \verb{$elementLookup}: \verb{function(e)} taking an element \code{e} as input and returning a list of 2-sized tuples, each representing which equivalence class and which index inside that equivalence class that element appears in.
}

If \verb{$elements}, \verb{$coalitionLookup} and \verb{$elementLookup} are known beforehand, they can be passed to the function to bypass its own possibly resource-intensive initialization process.
Since these values are so tightly coupled to the \verb{$eqs} list, however, this is only ever encouraged if the time gains are undoubtedly justified.
}
\description{
Append an equivalence to a power relation with all its missing coalitions to make it total.
}
\details{
A power relation is total if for every \eqn{S, T \subseteq N}{S, T subset or equal to N},

\deqn{S \succeq T\text{ or }T \succeq S.}{S>=T or T>=S.}

In other words, we can compare every coalition against every other coalition there is.
The function simply adds the coalitions missing from the \code{\link{PowerRelation}} object to make it total behind the last equivalence class there is.
}
\examples{
pr <- newPowerRelation(c(1,2), '>', 3)
# 12 > 3

makePowerRelationTotal(pr)
# 12 > 3 > (123 ~ 13 ~ 23 ~ 1 ~ 2 ~ {})

makePowerRelationTotal(pr, includeEmptySet = FALSE)
# 12 > 3 > (123 ~ 13 ~ 23 ~ 1 ~ 2)

}
\seealso{
Other helper functions transorming existing \code{\link{PowerRelation}} objects: 
\code{\link{makePowerRelationMonotonic}()}
}
\concept{helper functions transorming existing \code{\link{PowerRelation}} objects}
